#!/usr/bin/env python3

import os
import argparse
import re
import eyed3
from PIL import Image

eyed3.log.setLevel("ERROR")


def set_img(tag, path: str):
    with Image.open(path) as im:
        mod = False
        width, height = im.size
        if width / height != 1:
            size = min(width, height)
            left = (width - size) / 2
            top = (height - size) / 2
            right = (width + size) / 2
            bottom = (height + size) / 2
            im = im.crop((left, top, right, bottom))
            mod = True
        if width > 600:
            im = im.resize((600, 600))
            mod = True
        if im.format != "JPEG":
            im = im.convert("RGB")
            mod = True

        if mod:
            im.save(path, "JPEG")

    tag.images.set(3, open(path, "rb").read(), "image/jpeg")


num_delim = ". "
year_delim = " - "

parser = argparse.ArgumentParser(
    description="automatically updating all the ID3 tags based on a file structure and stuff"
)
parser.add_argument(
    "root_path",
    metavar="music_dir",
    type=str,
    help="path to the music directory ('~/Music' by default)",
    nargs="?",
    default="~/Music",
)

args = parser.parse_args()

mus_file_re = r".*\.mp3"

os.chdir(os.path.expanduser(args.root_path))

for root, _, files in os.walk("./"):
    dir = os.path.normpath(root)
    for file in files:
        if re.match(mus_file_re, file):
            song = eyed3.load(f"{dir}{os.sep}{file}")
            if not song.tag:
                song.initTag()
            tag = song.tag

            [genre, artist, *album] = dir.split(os.sep)
            if len(album):
                album = album[0]
            else:
                album = None

            [*base, ext] = file.split(".")
            title = ".".join(base)

            num = None
            title_pre = title.split(num_delim)
            if len(title_pre) > 1:
                num = title_pre[0]
                title = num_delim.join(title_pre[1:])

            year = None
            if album:
                album_year = album.split(year_delim)
                if len(album_year) > 1:
                    year = album_year[0]
                    album = year_delim.join(album_year[1:])

            tag.genre = genre
            tag.artist = artist
            if album:
                tag.album = album
            if year:
                tag.year = year
            if num:
                tag.num = num

            # TODO: update file/dir based by "same_name".txt file,
            # using some cfg-like format to literally rewrite some tags

            is_numed = num != None

            full_img = f"{dir}{os.sep}{num}{num_delim}{title}.jpg"
            title_img = f"{dir}{os.sep}{title}.jpg"
            num_img = f"{dir}{os.sep}{num}.jpg"
            _img = f"{dir}{os.sep}_.jpg"
            artist_img = f"{os.sep.join(dir.split(os.sep)[:-1])}{os.sep}_.jpg"
            genre_img = f"{os.sep.join(dir.split(os.sep)[:-2])}{os.sep}_.jpg"

            if os.path.isfile(full_img) and is_numed:
                set_img(tag, full_img)
            elif os.path.isfile(title_img):
                set_img(tag, title_img)
            elif os.path.isfile(num_img) and is_numed:
                set_img(tag, num_img)
            elif os.path.isfile(_img):
                set_img(tag, _img)
            elif os.path.isfile(artist_img):
                set_img(tag, artist_img)
            elif os.path.isfile(genre_img):
                set_img(tag, genre_img)

            tag.save()
